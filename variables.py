from telebot import types

from data.companies import Company
from data.database import session
from data.events import Event

Session = session()

default_balance = 2

REG, GIVE_PROMO, ENTER_PROMO, READY, CHANGE_REG_1, CHANGE_REG_2, READY_2, ASSESS, MAKE_ORDER = range(9)
mail_pattern = '[a-zA-Z0-9\-._]{3,25}@(gmail|mail|ya|yandex|yahoo|outlook|hse|edu\.hse|)\.(ru|net|com|ua)'
# READY_2 - –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –æ—Ç–∫—É–¥–∞ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ü–µ–Ω–∫–µ –∫–æ–º–ø–∞–Ω–∏–π + –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –º–µ—Ä—á–∞


def event_calendar_str():
    result = f''
    events_db = Session.query(Event).order_by(Event.number)
    for event in events_db:
        result += f'üî∫{event.name}\nüîπ{event.datetime}\n' \
                  f'üîπ{event.description if event.description is not None else "–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–∑–∂–µ!"}\n' \
                  f'üîπ{event.link if event.link is not None else "–°—Å—ã–ª–∫–∞ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–∑–∂–µ!"}\n\n'
    return result


def companies_dict():
    companies_db = Session.query(Company)
    companies = dict()
    for comp in companies_db:
        companies[comp.name] = comp.description
    return companies


rules = '–ö–∞–∫ *–∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å* –∫–æ–∏–Ω—ã:\n2 –∫–æ–∏–Ω–∞ ‚Äî –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —á–∞—Ç-–±–æ—Ç–µ\n1 –∫–æ–∏–Ω ‚Äî –∑–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä–µ\n' \
        '1 –∫–æ–∏–Ω ‚Äî –∑–∞ –∑–∞–¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å\n5 –∫–æ–∏–Ω–æ–≤ ‚Äî –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä–µ\n–ü–æ 5 –∫–æ–∏–Ω–æ–≤ —Ç–µ–±–µ –∏ –¥—Ä—É–≥—É ‚Äî –∫–æ–≥–¥–∞ —Ç–≤–æ–π ' \
        '–¥—Ä—É–≥ –≤–≤–µ–¥–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —á–∞—Ç-–±–æ—Ç–µ\n\n–í –∏–≥—Ä–µ 2 –∫–æ—à–µ–ª—å–∫–∞: —Ç–≤–æ–π –∏ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π, —É—á–∞—Å—Ç–≤—É—é—â–∏—Ö –≤ –ù–µ–¥–µ–ª–µ –∫–∞—Ä—å–µ—Ä—ã. ' \
        '–°–æ –≤—Å–µ—Ö –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ç–æ–±–æ–π –∫–æ–∏–Ω–æ–≤ 10% –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –≤ –∫–æ—à–µ–ª–µ–∫ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π ‚Äî —ç—Ç–æ –Ω–∞–ª–æ–≥ –Ω–∞ —É—Å–ø–µ—Ö.' \
        ' –£–≤—ã, –Ω–æ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏–µ ‚Äî –Ω–µ–æ—Ç—ä–µ–º–ª–µ–º—ã–π –∞—Ç—Ä–∏–±—É—Ç –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π.\n\n–ö–∞–∫ *–ø–æ—Ç—Ä–∞—Ç–∏—Ç—å* –∫–æ–∏–Ω—ã:\n ' \
        '–° 23 –Ω–æ—è–±—Ä—è –≤ 19:00 –¥–æ 26 –Ω–æ—è–±—Ä—è 18:00 —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏ –∫–æ–∏–Ω—ã –∏–∑ –∫–æ—à–µ–ª—å–∫–∞ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π –º–µ–∂–¥—É —Å–∞–º—ã–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏' \
        ' –≤–µ–±–∏–Ω–∞—Ä–∞–º–∏ –ø–æ —Ç–≤–æ–µ–º—É –º–Ω–µ–Ω–∏—é ‚Äî —Ä–µ–π—Ç–∏–Ω–≥ –†–ê–ë–û–¢–û–î–ê–¢–ï–õ–ï–ô –≥–æ—Ç–æ–≤!' \
        '\n–° 24 –Ω–æ—è–±—Ä—è —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –∫–æ–∏–Ω—ã –∏–∑ —Å–≤–æ–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ ‚Äî –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞—Ç–∞–ª–æ–≥ –º–µ—Ä—á–∞. ' \
        '–ü—Ä–∏—Ö–æ–¥–∏ –∑–∞ —á–µ—Å—Ç–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–∑–∞–º–∏ –≤ –¶–µ–Ω—Ç—Ä –∫–∞—Ä—å–µ—Ä—ã (–®–∞–±–æ–ª–æ–≤–∫–∞, –∫–æ—Ä–ø—É—Å 4, –∞—É–¥–∏—Ç–æ—Ä–∏—è 4401)'

info = '–ù–µ–¥–µ–ª—è –ö–∞—Ä—å–µ—Ä—ã –í–®–ë –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –Ω–∞ –Ω–∞—à–µ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ –≤–µ—Å–Ω–æ–π –∏ –æ—Å–µ–Ω—å—é. –í —ç—Ç–æ—Ç —Ä–∞–∑ –æ–Ω–∞ –ø—Ä–æ–π–¥–µ—Ç —Å 22 –ø–æ 23 –Ω–æ—è–±—Ä—è ' \
       '2021 –≥–æ–¥–∞. –í —Ä–∞–º–∫–∞—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å–æ—Å—Ç–æ–∏—Ç—Å—è 14 –≤–µ–±–∏–Ω–∞—Ä–æ–≤ –Ω–∞ —Å–∞–º—ã–µ —Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã.\n\n–£ –∫–∞–∂–¥–æ–≥–æ ' \
       '–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤ –±–æ—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –±—É–¥–µ—Ç —Å–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å—á–µ—Ç —Å –≤–∞–ª—é—Ç–æ–π –í–®–ë - <b>–∫–æ–∏–Ω–∞–º–∏</b>. –ü—Ä–æ—è–≤–ª—è—è ' \
       '–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä–∞—Ö, —Ç—ã —Å–º–æ–∂–µ—à—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–µ –∫–æ–∏–Ω–æ–≤. –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –ù–µ–¥–µ–ª–∏ –ö–∞—Ä—å–µ—Ä—ã —Ç—ã —Å–º–æ–∂–µ—à—å ' \
       '–æ–±–º–µ–Ω—è—Ç—å –∏—Ö –Ω–∞ <b>–º–µ—Ä—á</b> –í—ã—Å—à–µ–π –®–∫–æ–ª—ã –ë–∏–∑–Ω–µ—Å–∞ (—Ç–µ—Ä–º–æ–∫—Ä—É–∂–∫–∏, —Å–≤–∏—Ç—à–æ—Ç—ã, –±–ª–æ–∫–Ω–æ—Ç—ã, —à–æ–ø–µ—Ä—ãüòâ). \n\n–° –ø–æ–º–æ—â—å—é –±–æ—Ç–∞ ' \
       '—Ç—ã –º–æ–∂–µ—à—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å, —Å–º–æ—Ç—Ä–µ—Ç—å ' \
       '–∞–∫—Ç—É–∞–ª—å–Ω—É—é' \
       ' –ø—Ä–æ–≥—Ä–∞–º–º—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–∏—Ö, –∞ —Ç–∞–∫–∂–µ —á–∏—Ç–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ–º–ø–∞–Ω–∏—è—Ö-–ø–∞—Ä—Ç–Ω–µ—Ä–∞—Ö –í–®–ë!\n\n'
help_message = '–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º, —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å –ù–µ–¥–µ–ª–µ–π –ö–∞—Ä—å–µ—Ä—ã, –ø–∏—à–∏ –Ω–∞ –ø–æ—á—Ç—É careers@hse.ru\n' \
               '–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –æ–±—Ä–∞—â–∞–π—Å—è –∫ @koli_vera '


welcome = "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –Ω–∞ –æ—Å–µ–Ω–Ω–µ–π –ù–µ–¥–µ–ª–µ –ö–∞—Ä—å–µ—Ä—ã –í–®–ë.\n\n" + info + '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã ' \
                                                                                            '–Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è. ' \
                                                                                            '–í–≤–µ–¥–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–∏ ' \
                                                                                            '–§–ò–û: '
about_coins = '–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω–æ {} –∫–æ–∏–Ω–∞.'.format(default_balance)
# help_message = '–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –≤–æ–ø—Ä–æ—Å–∞–º, —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å –ù–µ–¥–µ–ª–µ–π –ö–∞—Ä—å–µ—Ä—ã, –ø–∏—à–∏ –Ω–∞ –ø–æ—á—Ç—É careers@hse.ru\n' \
#                '–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –æ–±—Ä–∞—â–∞–π—Å—è –∫ @koli_vera '

keyboard_back_menu = types.InlineKeyboardMarkup()
keyboard_back_menu.add(types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='menu'))

keyboard_back = types.InlineKeyboardMarkup()
keyboard_back.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='menu'))

keyboard_changes = types.InlineKeyboardMarkup(row_width=2)
b1 = types.InlineKeyboardButton(text='–î–∞', callback_data='changes_needed')
b2 = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no_changes_needed')
keyboard_changes.add(b1, b2)


def get_kb_companies():
    keyboard_companies = types.InlineKeyboardMarkup(row_width=2)
    buttons = []
    for key, val in companies_dict().items():
        new_button = types.InlineKeyboardButton(text=key, callback_data=key)
        buttons.append(new_button)
    keyboard_companies.add(*buttons)
    keyboard_companies.add(types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='menu'))
    return keyboard_companies


if __name__ == '__main__':
    keyboard_companies = get_kb_companies()


keyboard_change_reg = types.InlineKeyboardMarkup()
b1 = types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û', callback_data='change_fio')
b2 = types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å email', callback_data='change_email')
keyboard_change_reg.add(b1, b2)

keyboard_promo = types.InlineKeyboardMarkup(row_width=2)
keyboard_promo.add(types.InlineKeyboardButton(text='–î–∞', callback_data='activate_promo'),
                   types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='skip_activate_promo'))

keyboard_menu = types.InlineKeyboardMarkup(row_width=2)
b1 = types.InlineKeyboardButton(text='–í–µ–±–∏–Ω–∞—Ä—ã', callback_data='event_calendar')
b2 = types.InlineKeyboardButton(text='–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã', callback_data='rules')
b3 = types.InlineKeyboardButton(text='–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–∏', callback_data='companies')
b4 = types.InlineKeyboardButton(text='–ú–æ–π –±–∞–ª–∞–Ω—Å', callback_data='balance')
b5 = types.InlineKeyboardButton(text='–í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥', callback_data='activate_promo')
b6 = types.InlineKeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ù–ö', callback_data='info')
b7 = types.InlineKeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data='change_reg')
keyboard_menu.add(b1, b2, b3, b4, b5, b6, b7)

keyboard_menu_light = types.InlineKeyboardMarkup(row_width=2)
keyboard_menu_light.add(b1, b2, b3, b4, b6, b7)


final_intro = '–°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –ù–µ–¥–µ–ª–µ –ö–∞—Ä—å–µ—Ä—ã! –¢—ã —Ö–æ—Ä–æ—à–æ –ø—Ä–æ—è–≤–∏–ª —Å–µ–±—è. –ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å ' \
              '–∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∫–æ–∏–Ω—ã –Ω–∞ –º–µ—Ä—á –í–®–ë!\n–ü–æ –ø—Ä–∞–≤–∏–ª–∞–º –∏–≥—Ä—ã, –ø—Ä–µ–∂–¥–µ —á–µ–º —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –º–µ—Ä—á, ' \
              '—Å—Ç—É–¥–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –æ—Ü–µ–Ω–∏—Ç—å —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π. –¢—ã –¥–æ–ª–∂–µ–Ω —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å 10 –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ç–æ–±–æ–π –∫–æ–∏–Ω–æ–≤ ' \
              '–º–µ–∂–¥—É –∫–æ–º–ø–∞–Ω–∏—è–º–∏, —Ç–æ–≥–¥–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–∞—è —Å—É–º–º–∞ —Ç–≤–æ–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞, –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å ' \
              '–Ω–∞ –º–µ—Ä—á.\n–≠—Ç–æ —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã–π "–Ω–∞–ª–æ–≥ –Ω–∞ —É—Å–ø–µ—Ö", –∞ –ø–æ –∏—Ç–æ–≥–∞–º —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏—Ö –æ—Ü–µ–Ω–æ–∫ ' \
              '–¶–µ–Ω—Ç—Ä –ö–∞—Ä—å–µ—Ä—ã —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π.'

keyboard_final = types.InlineKeyboardMarkup()
keyboard_final.add(types.InlineKeyboardButton(text='–û—Ü–µ–Ω–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏–∏', callback_data='assess'))
                  # types.InlineKeyboardButton(text='–ö–∞—Ç–∞–ª–æ–≥ –º–µ—Ä—á–∞', callback_data='catalog'))


def get_kb_assess():
    keyboard_companies = types.InlineKeyboardMarkup(row_width=2)
    buttons = []
    for key, val in companies_dict().items():
        new_button = types.InlineKeyboardButton(text=key, callback_data=f'{key}')
        buttons.append(new_button)
    keyboard_companies.add(*buttons)
    return keyboard_companies


kb_assess_2 = types.InlineKeyboardMarkup()
kb_assess_2.add(types.InlineKeyboardButton(text='–î–∞–ª—å—à–µ', callback_data='check_assess'))
